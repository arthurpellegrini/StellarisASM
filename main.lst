


ARM Macro Assembler    Page 1 


    1 00000000         ; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ;------------------------------------------------
    3 00000000         ; AUTHORS - Arthur PELLEGRINI & Clément BRISSARD
    4 00000000         ;------------------------------------------------
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    9 00000000 400FE108 
                       SYSCTL_PERIPH_GPIOF
                               EQU              0x400FE108  ;; SYSCTL_RCGC2_R (
                                                            p291 datasheet de l
                                                            m3s9b92.pdf)
   10 00000000         
   11 00000000         ; Configure the corresponding pin to be an output
   12 00000000         ; All GPIO pins are inputs by default
   13 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ;; GPIO Direction (
                                                            p417 datasheet de l
                                                            m3s9B92.pdf)
   14 00000000         
   15 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   16 00000000         ; By default, all GPIO pins have 2-mA drive.
   17 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ;; GPIO 2-mA Drive 
                                                            Select (p428 datash
                                                            eet de lm3s9B92.pdf
                                                            )
   18 00000000         
   19 00000000         ; Digital enable register
   20 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   21 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ;; GPIO Digital Ena
                                                            ble (p437 datasheet
                                                             de lm3s9B92.pdf)
   22 00000000         
   23 00000000         ; The GPIOPUR register is the pull-up control register
   24 00000000 00000510 
                       GPIO_O_PUR
                               EQU              0x00000510
   25 00000000         
   26 00000000         ; The GPIODATA register is the data register
   27 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ;; GPIO Port D (APB
                                                            ) base: 0x4000.7000
                                                            
   28 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ;; GPIO Port E (APB
                                                            ) base: 0x4002.4000
                                                            
   29 00000000 40025000 



ARM Macro Assembler    Page 2 


                       GPIO_PORTF_BASE
                               EQU              0x40025000  ;; GPIO Port F (APB
                                                            ) base: 0x4002.5000
                                                             (p416 datasheet de
                                                             lm3s9B92.pdf)
   30 00000000         
   31 00000000         ; PINS Port Input
   32 00000000 000000C0 
                       PINSD_6_7
                               EQU              0xC0        ;; Switchs 1 & 2 on
                                                             Pins 6 & 7 (1100 0
                                                            000)
   33 00000000 00000003 
                       PINSE_1_2
                               EQU              0x03        ;; Bumpers 1 & 2 on
                                                             Pins 1 & 2  (0000 
                                                            0011)
   34 00000000 00000030 
                       PINSF_4_5
                               EQU              0x30        ;; Leds 1 & 2 on Pi
                                                            ns 4 & 5   (0011 00
                                                            00)
   35 00000000         
   36 00000000         ; Blinking Frequency
   37 00000000 000FFFFF 
                       TIME    EQU              0x000FFFFF  ;; Fixed Value
   38 00000000         
   39 00000000                 ENTRY
   40 00000000                 EXPORT           __main
   41 00000000         
   42 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   43 00000000                 IMPORT           MOTEUR_INIT ;; initialise les m
                                                            oteurs (configure l
                                                            es pwms + GPIO)
   44 00000000         
   45 00000000                 IMPORT           MOTEUR_DROIT_ON ;; activer le m
                                                            oteur droit
   46 00000000                 IMPORT           MOTEUR_DROIT_OFF ;; déactiver 
                                                            le moteur droit
   47 00000000                 IMPORT           MOTEUR_DROIT_AVANT ;; moteur dr
                                                            oit tourne vers l'a
                                                            vant
   48 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ;; moteur 
                                                            droit tourne vers l
                                                            'arrière
   49 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ;; inverse
                                                             le sens de rotatio
                                                            n du moteur droit
   50 00000000         
   51 00000000                 IMPORT           MOTEUR_GAUCHE_ON ;; activer le 
                                                            moteur gauche
   52 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ;; déactiver
                                                             le moteur gauche
   53 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ;; moteur g
                                                            auche tourne vers l
                                                            'avant
   54 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ;; moteur
                                                             gauche tourne vers



ARM Macro Assembler    Page 3 


                                                             l'arrière
   55 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ;; invers
                                                            e le sens de rotati
                                                            on du moteur gauche
                                                             
   56 00000000         
   57 00000000         __main
   58 00000000         ;; Enable the Port F peripheral clock by setting bit 5 (
                       0x20 == 0b100000) (p291 datasheet de lm3s9B96.pdf)
   59 00000000         ;; (GPIO::FEDCBA)
   60 00000000 4D3B            ldr              R5, = SYSCTL_PERIPH_GPIOF 
                                                            ;; RCGC2
   61 00000002 F04F 0938       mov              R9, #0x00000038 ;; Enable clock
                                                             sur GPIO F E D (00
                                                            11 1000)
   62 00000006         ;; (GPIO::FEDCBA)
   63 00000006 F8C5 9000       str              R9, [R5]
   64 0000000A         ;; "There must be a delay of 3 system clocks before any 
                       GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   65 0000000A BF00            nop                          ;; very important..
                                                            .
   66 0000000C BF00            nop
   67 0000000E BF00            nop                          ;; not necessary in
                                                             simulation or in d
                                                            ebbug step by step.
                                                            ..
   68 00000010         
   69 00000010         ;;----------------------CONF_LEDS
   70 00000010 F04F 0930       ldr              R9, = PINSF_4_5
   71 00000014 4D37            ldr              R5, = GPIO_PORTF_BASE+GPIO_O_DI
R
   72 00000016 F8C5 9000       str              R9, [R5]
   73 0000001A 4D37            ldr              R5, = GPIO_PORTF_BASE+GPIO_O_DE
N
   74 0000001C F8C5 9000       str              R9, [R5]
   75 00000020 4D36            ldr              R5, = GPIO_PORTF_BASE+GPIO_O_DR
2R
   76 00000022 F8C5 9000       str              R9, [R5]
   77 00000026 F04F 0230       mov              R2, #PINSF_4_5 
                                                            ;; LEDS values   
   78 0000002A 4D35            ldr              R5, = GPIO_PORTF_BASE + (PINSF_
4_5<<2) 
                                                            ;; Turn on LEDS tha
                                                            t correspond to por
                                                            tF broches 4 & 5 va
                                                            lues 
   79 0000002C         
   80 0000002C         
   81 0000002C         ;;----------------------CONF_SWITCHS
   82 0000002C F04F 09C0       ldr              R9, = PINSD_6_7
   83 00000030 4F34            ldr              R7, = GPIO_PORTD_BASE+GPIO_O_DE
N
   84 00000032 F8C7 9000       str              R9, [R7]
   85 00000036 4F34            ldr              R7, = GPIO_PORTD_BASE+GPIO_O_PU
R
   86 00000038 F8C7 9000       str              R9, [R7]
   87 0000003C 4F33            ldr              R7, = GPIO_PORTD_BASE + (PINSD_
6_7<<2)
   88 0000003E         



ARM Macro Assembler    Page 4 


   89 0000003E         
   90 0000003E         ;;----------------------CONF_BUMPERS
   91 0000003E F04F 0903       ldr              R9, = PINSE_1_2
   92 00000042 F8DF 80CC       ldr              R8, = GPIO_PORTE_BASE+GPIO_O_DE
N
   93 00000046 F8C8 9000       str              R9, [R8]
   94 0000004A F8DF 80C8       ldr              R8, = GPIO_PORTE_BASE+GPIO_O_PU
R
   95 0000004E F8C8 9000       str              R9, [R8]
   96 00000052 F8DF 80C4       ldr              R8, = GPIO_PORTE_BASE + (PINSE_
1_2<<2)
   97 00000056         
   98 00000056         
   99 00000056         ;;----------------------CONF_MOTORS
  100 00000056 F7FF FFFE       BL               MOTEUR_INIT ;; Setup PWM + GPIO
                                                            
  101 0000005A F7FF FFFE       BL               MOTEUR_DROIT_ON ;; Turn on righ
                                                            t motor
  102 0000005E F7FF FFFE       BL               MOTEUR_GAUCHE_ON ;; Turn on lef
                                                            t motor
  103 00000062         
  104 00000062         
  105 00000062 F04F 0A80       MOV              R10, #0x80  ;; Classic mode by 
                                                            default
  106 00000066         
  107 00000066         main_loop
  108 00000066         ;----------------------Get Environnement Entries (Update
                        Switchs & Bumpers Values)
  109 00000066 683B            ldr              R3, [R7]    ;; Get Switchs Entr
                                                            ies Values
  110 00000068 F8D8 4000       ldr              R4, [R8]    ;; Get Bumper Entri
                                                            es Values
  111 0000006C         ;----------------------END Get Environnement Entries
  112 0000006C         
  113 0000006C         ;----------------------CHECK SWITCHS
  114 0000006C 2B80            CMP              R3, #0x80   ;; if value equals 
                                                            to switch 1 input v
                                                            alue
  115 0000006E D002            BEQ              switch1     ;; SWITCH 1
  116 00000070 2B40            CMP              R3, #0x40   ;; if value equals 
                                                            to switch 2 input v
                                                            alue
  117 00000072 D003            BEQ              switch2     ;; SWITCH 2
  118 00000074 E004            B                end_switchs ;; FUNCTION CHECK S
                                                            WITCHS END
  119 00000076         switch1                              ;; Classic function
                                                            ning mode
  120 00000076 F04F 0A80       MOV              R10, #0x80  ;; Change global mo
                                                            de value to classic
                                                            
  121 0000007A E001            B                end_switchs ;; FUNCTION CHECK S
                                                            WITCHS END
  122 0000007C         switch2                              ;; Labyrinth functi
                                                            onning mode
  123 0000007C F04F 0A40       MOV              R10, #0x40  ;; Change global mo
                                                            de value to labyrin
                                                            th 
  124 00000080         end_switchs
  125 00000080         ;----------------------END CHECK SWITCHS



ARM Macro Assembler    Page 5 


  126 00000080         
  127 00000080         ;----------------------CHOOSE MODE
  128 00000080 F1BA 0F80       CMP              R10, #0x80  ; Si classique mode
                                                            
  129 00000084 D0FF            BEQ              classic_mode
  130 00000086         ;CMP R10, #0x40  ; Si labyrinthe mode
  131 00000086         ;BEQ labyrinthe_mode
  132 00000086         
  133 00000086         classic_mode
  134 00000086 F000 F82C       BL               WAIT
  135 0000008A 2C01            CMP              R4, #0x01
  136 0000008C D013            BEQ              c_bumper_gauche
  137 0000008E 2C02            CMP              R4, #0x02
  138 00000090 D00A            BEQ              c_bumper_droit
  139 00000092 2C03            CMP              R4, #0x03
  140 00000094 D001            BEQ              c_bumper_not_pressed
  141 00000096 2C00            CMP              R4, #0x00
  142 00000098 D014            BEQ              c_all_bumpers
  143 0000009A         
  144 0000009A         c_bumper_not_pressed
  145 0000009A F04F 0200       MOV              R2, #0x00   ; on reset les leds
                                                            
  146 0000009E F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  147 000000A2 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  148 000000A6 E014            B                end_choose_mode
  149 000000A8         
  150 000000A8         c_bumper_droit
  151 000000A8 F04F 0210       MOV              R2, #0x10
  152 000000AC F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  153 000000B0 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  154 000000B4 E00D            B                end_choose_mode
  155 000000B6         
  156 000000B6         c_bumper_gauche
  157 000000B6 F04F 0220       MOV              R2, #0x20
  158 000000BA F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  159 000000BE F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  160 000000C2 E006            B                end_choose_mode
  161 000000C4         
  162 000000C4         c_all_bumpers
  163 000000C4 F04F 0230       MOV              R2, #0x30
  164 000000C8 F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  165 000000CC F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  166 000000D0 E7FF            B                end_choose_mode
  167 000000D2         
  168 000000D2         ;labyrinthe_mode
  169 000000D2         ;CMP R4, #0x01
  170 000000D2         ;BEQ l_bumper_gauche
  171 000000D2         ;CMP R4, #0x02
  172 000000D2         ;BEQ l_bumper_droit
  173 000000D2         ;CMP R4, #0x03
  174 000000D2         ;BEQ l_bumper_not_pressed 
  175 000000D2         ;BL WAIT
  176 000000D2         ;CMP R4, #0x00
  177 000000D2         ;BEQ l_all_bumpers
  178 000000D2         ;B end_choose_mode
  179 000000D2         
  180 000000D2         ;l_bumper_not_pressed
  181 000000D2         ;MOV R2, #0x00; on reset les leds
  182 000000D2         ;BL MOTEUR_DROIT_AVANT    



ARM Macro Assembler    Page 6 


  183 000000D2         ;BL MOTEUR_GAUCHE_AVANT
  184 000000D2         ;B end_choose_mode
  185 000000D2         ;l_bumper_droit
  186 000000D2         ;MOV R2, #0x10
  187 000000D2         ;BL MOTEUR_DROIT_ARRIERE    
  188 000000D2         ;BL MOTEUR_GAUCHE_AVANT
  189 000000D2         ;B end_choose_mode
  190 000000D2         ;l_bumper_gauche
  191 000000D2         ;MOV R2, #0x20
  192 000000D2         ;BL MOTEUR_DROIT_AVANT    
  193 000000D2         ;BL MOTEUR_GAUCHE_ARRIERE
  194 000000D2         ;B end_choose_mode
  195 000000D2         ;l_all_bumpers
  196 000000D2         ;MOV R2, #0x30
  197 000000D2         ;BL MOTEUR_DROIT_ARRIERE    
  198 000000D2         ;BL MOTEUR_GAUCHE_ARRIERE
  199 000000D2         
  200 000000D2         end_choose_mode
  201 000000D2         ;----------------------END CHOOSE MODE
  202 000000D2         
  203 000000D2         ;----------------------BLINKING LED
  204 000000D2 F04F 0900       MOV              R9, #0x00
  205 000000D6 F8C5 9000       str              R9, [R5]    ;; Turn off LEDS wi
                                                            th 0x00  
  206 000000DA F000 F802       BL               WAIT        ;; Wait between LED
                                                            S on/off 
  207 000000DE 602A            str              R2, [R5]    ;; Turn on LEDS tha
                                                            t correspond to por
                                                            tF broche 4 & 5 val
                                                            ues : 00110000 => R
                                                            2
  208 000000E0         ;----------------------END BLINKING LED
  209 000000E0         
  210 000000E0 E7C1            b                main_loop
  211 000000E2         ;BX LR  ;; retour à la suite du lien de branchement
  212 000000E2         
  213 000000E2         ;---------------------------------------   FUNCTIONS  --
                       -------------------------------------
  214 000000E2         ;----------------------Waiting Loop
  215 000000E2         WAIT
  216 000000E2 F8DF 9038       LDR              R9, =TIME
  217 000000E6 F1B9 0901 
                       wait1   SUBS             R9, #0x01
  218 000000EA D1FC            BNE              wait1
  219 000000EC 4770            BX               LR
  220 000000EE         
  221 000000EE         ;--------------------------------------- END FUNCTIONS -
                       --------------------------------------
  222 000000EE BF00            NOP
  223 000000F0                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              400250C0 
              4000751C 
              40007510 
              40007300 
              4002451C 



ARM Macro Assembler    Page 7 


              40024510 
              4002400C 
              000FFFFF 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\main.d
 -o.\main.o -I"C:\Program Files\Keil\ARM\RV31\INC" -I"C:\Program Files\Keil\ARM
\CMSIS\Include" -I"C:\Program Files\Keil\ARM\Inc\Luminary" --predefine="__EVAL 
SETA 1" --predefine="__MICROLIB SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file main.s
   Uses
      None
Comment: .text unused
WAIT 000000E2

Symbol: WAIT
   Definitions
      At line 215 in file main.s
   Uses
      At line 134 in file main.s
      At line 206 in file main.s

__main 00000000

Symbol: __main
   Definitions
      At line 57 in file main.s
   Uses
      At line 40 in file main.s
Comment: __main used once
c_all_bumpers 000000C4

Symbol: c_all_bumpers
   Definitions
      At line 162 in file main.s
   Uses
      At line 142 in file main.s
Comment: c_all_bumpers used once
c_bumper_droit 000000A8

Symbol: c_bumper_droit
   Definitions
      At line 150 in file main.s
   Uses
      At line 138 in file main.s
Comment: c_bumper_droit used once
c_bumper_gauche 000000B6

Symbol: c_bumper_gauche
   Definitions
      At line 156 in file main.s
   Uses
      At line 136 in file main.s
Comment: c_bumper_gauche used once
c_bumper_not_pressed 0000009A

Symbol: c_bumper_not_pressed
   Definitions
      At line 144 in file main.s
   Uses
      At line 140 in file main.s
Comment: c_bumper_not_pressed used once
classic_mode 00000086




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: classic_mode
   Definitions
      At line 133 in file main.s
   Uses
      At line 129 in file main.s
Comment: classic_mode used once
end_choose_mode 000000D2

Symbol: end_choose_mode
   Definitions
      At line 200 in file main.s
   Uses
      At line 148 in file main.s
      At line 154 in file main.s
      At line 160 in file main.s
      At line 166 in file main.s

end_switchs 00000080

Symbol: end_switchs
   Definitions
      At line 124 in file main.s
   Uses
      At line 118 in file main.s
      At line 121 in file main.s

main_loop 00000066

Symbol: main_loop
   Definitions
      At line 107 in file main.s
   Uses
      At line 210 in file main.s
Comment: main_loop used once
switch1 00000076

Symbol: switch1
   Definitions
      At line 119 in file main.s
   Uses
      At line 115 in file main.s
Comment: switch1 used once
switch2 0000007C

Symbol: switch2
   Definitions
      At line 122 in file main.s
   Uses
      At line 117 in file main.s
Comment: switch2 used once
wait1 000000E6

Symbol: wait1
   Definitions
      At line 217 in file main.s
   Uses
      At line 218 in file main.s
Comment: wait1 used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 21 in file main.s
   Uses
      At line 73 in file main.s
      At line 83 in file main.s
      At line 92 in file main.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 13 in file main.s
   Uses
      At line 71 in file main.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 17 in file main.s
   Uses
      At line 75 in file main.s
Comment: GPIO_O_DR2R used once
GPIO_O_PUR 00000510

Symbol: GPIO_O_PUR
   Definitions
      At line 24 in file main.s
   Uses
      At line 85 in file main.s
      At line 94 in file main.s

GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 27 in file main.s
   Uses
      At line 83 in file main.s
      At line 85 in file main.s
      At line 87 in file main.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 28 in file main.s
   Uses
      At line 92 in file main.s
      At line 94 in file main.s
      At line 96 in file main.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 29 in file main.s
   Uses
      At line 71 in file main.s
      At line 73 in file main.s
      At line 75 in file main.s
      At line 78 in file main.s

PINSD_6_7 000000C0

Symbol: PINSD_6_7
   Definitions
      At line 32 in file main.s
   Uses
      At line 82 in file main.s
      At line 87 in file main.s

PINSE_1_2 00000003

Symbol: PINSE_1_2
   Definitions
      At line 33 in file main.s
   Uses
      At line 91 in file main.s
      At line 96 in file main.s

PINSF_4_5 00000030

Symbol: PINSF_4_5
   Definitions
      At line 34 in file main.s
   Uses
      At line 70 in file main.s
      At line 77 in file main.s
      At line 78 in file main.s

SYSCTL_PERIPH_GPIOF 400FE108

Symbol: SYSCTL_PERIPH_GPIOF
   Definitions
      At line 9 in file main.s
   Uses
      At line 60 in file main.s
Comment: SYSCTL_PERIPH_GPIOF used once
TIME 000FFFFF

Symbol: TIME
   Definitions
      At line 37 in file main.s
   Uses
      At line 216 in file main.s
Comment: TIME used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 48 in file main.s
   Uses
      At line 152 in file main.s
      At line 164 in file main.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 47 in file main.s
   Uses
      At line 146 in file main.s
      At line 158 in file main.s

MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 49 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 46 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 45 in file main.s
   Uses
      At line 101 in file main.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 54 in file main.s
   Uses
      At line 159 in file main.s
      At line 165 in file main.s

MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 53 in file main.s
   Uses
      At line 147 in file main.s
      At line 153 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 55 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 52 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 51 in file main.s
   Uses
      At line 102 in file main.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 43 in file main.s
   Uses
      At line 100 in file main.s
Comment: MOTEUR_INIT used once
11 symbols
371 symbols in table
