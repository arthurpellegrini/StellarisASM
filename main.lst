


ARM Macro Assembler    Page 1 


    1 00000000         ; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ;------------------------------------------------
    3 00000000         ; AUTHORS - Arthur PELLEGRINI & Clément BRISSARD
    4 00000000         ;------------------------------------------------
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    9 00000000 400FE108 
                       SYSCTL_PERIPH_GPIOF
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   10 00000000         
   11 00000000         ; Configure the corresponding pin to be an output
   12 00000000         ; All GPIO pins are inputs by default
   13 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   14 00000000         
   15 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   16 00000000         ; By default, all GPIO pins have 2-mA drive.
   17 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   18 00000000         
   19 00000000         ; Digital enable register
   20 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   21 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   22 00000000         
   23 00000000         ; The GPIOPUR register is the pull-up control register
   24 00000000 00000510 
                       GPIO_O_PUR
                               EQU              0x00000510
   25 00000000         
   26 00000000         ; The GPIODATA register is the data register
   27 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000
   28 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port E (APB)
                                                             base: 0x4002.4000
   29 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)



ARM Macro Assembler    Page 2 


                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   30 00000000         
   31 00000000         ; PINS Port Input
   32 00000000 000000C0 
                       PINSD_6_7
                               EQU              0xC0        ; Switchs 1 & 2 on 
                                                            Pins 6 & 7 (1100 00
                                                            00)
   33 00000000 00000003 
                       PINSE_1_2
                               EQU              0x03        ; Bumpers 1 & 2 on 
                                                            Pins 1 & 2  (0000 0
                                                            011)
   34 00000000 00000030 
                       PINSF_4_5
                               EQU              0x30        ; Leds 1 & 2 on Pin
                                                            s 4 & 5   (0011 000
                                                            0)
   35 00000000         
   36 00000000         ; Blinking Frequency
   37 00000000 002FFFFF 
                       TIME    EQU              0x002FFFFF  ; Fixed Value
   38 00000000         
   39 00000000         
   40 00000000                 ENTRY
   41 00000000                 EXPORT           __main
   42 00000000         
   43 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   44 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   45 00000000         
   46 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   47 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver l
                                                            e moteur droit
   48 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   49 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   50 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   51 00000000         
   52 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   53 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver 
                                                            le moteur gauche
   54 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   55 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière



ARM Macro Assembler    Page 3 


   56 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   57 00000000         
   58 00000000         
   59 00000000         __main
   60 00000000         ;; Enable the Port F peripheral clock by setting bit 5 (
                       0x20 == 0b100000) (p291 datasheet de lm3s9B96.pdf)
   61 00000000         ;; (GPIO::FEDCBA)
   62 00000000 4D52            ldr              R5, = SYSCTL_PERIPH_GPIOF 
                                                            ;; RCGC2
   63 00000002 F04F 0938       mov              R9, #0x00000038 ;; Enable clock
                                                             sur GPIO F E D (00
                                                            11 1000)
   64 00000006         ;; (GPIO::FEDCBA)
   65 00000006 F8C5 9000       str              R9, [R5]
   66 0000000A         ;; "There must be a delay of 3 system clocks before any 
                       GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   67 0000000A BF00            nop                          ;; very important..
                                                            .
   68 0000000C BF00            nop
   69 0000000E BF00            nop                          ;; not necessary in
                                                             simulation or in d
                                                            ebbug step by step.
                                                            ..
   70 00000010         
   71 00000010         ;;----------------------CONF_LEDS
   72 00000010 F04F 0930       ldr              R9, = PINSF_4_5
   73 00000014 4D4E            ldr              R5, = GPIO_PORTF_BASE+GPIO_O_DI
R
   74 00000016 F8C5 9000       str              R9, [R5]
   75 0000001A 4D4E            ldr              R5, = GPIO_PORTF_BASE+GPIO_O_DE
N
   76 0000001C F8C5 9000       str              R9, [R5]
   77 00000020 4D4D            ldr              R5, = GPIO_PORTF_BASE+GPIO_O_DR
2R
   78 00000022 F8C5 9000       str              R9, [R5]
   79 00000026 F04F 0230       mov              R2, #PINSF_4_5 ; LEDS values   
                                                            
   80 0000002A 4D4C            ldr              R5, = GPIO_PORTF_BASE + (PINSF_
4_5<<2) 
                                                            ; Turn on LEDS that
                                                             correspond to port
                                                            F broches 4 & 5 val
                                                            ues   
   81 0000002C         ;;----------------------END_CONF_LEDS
   82 0000002C         
   83 0000002C         ;;----------------------CONF_SWITCHS
   84 0000002C F04F 09C0       ldr              R9, = PINSD_6_7
   85 00000030 4F4B            ldr              R7, = GPIO_PORTD_BASE+GPIO_O_DE
N
   86 00000032 F8C7 9000       str              R9, [R7]
   87 00000036 4F4B            ldr              R7, = GPIO_PORTD_BASE+GPIO_O_PU
R
   88 00000038 F8C7 9000       str              R9, [R7]
   89 0000003C 4F4A            ldr              R7, = GPIO_PORTD_BASE + (PINSD_
6_7<<2)
   90 0000003E         ;;----------------------END_CONF_SWITCHS
   91 0000003E         



ARM Macro Assembler    Page 4 


   92 0000003E         ;;----------------------CONF_BUMPERS
   93 0000003E F04F 0903       ldr              R9, = PINSE_1_2
   94 00000042 F8DF 8128       ldr              R8, = GPIO_PORTE_BASE+GPIO_O_DE
N
   95 00000046 F8C8 9000       str              R9, [R8]
   96 0000004A F8DF 8124       ldr              R8, = GPIO_PORTE_BASE+GPIO_O_PU
R
   97 0000004E F8C8 9000       str              R9, [R8]
   98 00000052 F8DF 8120       ldr              R8, = GPIO_PORTE_BASE + (PINSE_
1_2<<2)
   99 00000056         ;;----------------------END_CONF_BUMPERS
  100 00000056         
  101 00000056         ;;----------------------CONF_MOTORS
  102 00000056 F7FF FFFE       BL               MOTEUR_INIT ; Setup PWM + GPIO
  103 0000005A F7FF FFFE       BL               MOTEUR_DROIT_ON ; Turn on right
                                                             motor
  104 0000005E F7FF FFFE       BL               MOTEUR_GAUCHE_ON ; Turn on left
                                                             motor
  105 00000062         ;;----------------------END_CONF_MOTORS 
  106 00000062         
  107 00000062         MAIN_LOOP
  108 00000062 E012            B                GET_ENTRIES
  109 00000064         END_GET_ENTRIES
  110 00000064         
  111 00000064 E01F            B                CHECK_SWITCHS
  112 00000066         END_CHECK_SWITCHS
  113 00000066 F1BA 0F80       CMP              R10, #0x80  ; Si classique mode
                                                            
  114 0000006A D002            BEQ              classic_mode
  115 0000006C F1BA 0F40       CMP              R10, #0x40  ; Si labyrinthe mod
                                                            e
  116 00000070 D001            BEQ              labyrinthe_mode
  117 00000072         classic_mode
  118 00000072 E023            B                CHECK_BUMPERS_CLASSIQUE
  119 00000074         END_CHECK_BUMPERS_CLASSIQUE
  120 00000074 E001            B                end_choose_mode
  121 00000076         labyrinthe_mode
  122 00000076 E038            B                CHECK_BUMPERS_LABYRINTHE
  123 00000078         END_CHECK_BUMPERS_LABYRINTHE
  124 00000078 E7FF            B                end_choose_mode
  125 0000007A         
  126 0000007A         end_choose_mode
  127 0000007A         
  128 0000007A         
  129 0000007A E00A            B                BLINKING_LEDS
  130 0000007C         END_BLINKING_LEDS
  131 0000007C         
  132 0000007C E7F1            b                MAIN_LOOP
  133 0000007E         
  134 0000007E         ;;------------------------------------------------------
                       -------------------------------------------
  135 0000007E         ;;---------------------------------------   FUNCTIONS  -
                       --------------------------------------
  136 0000007E         ;;------------------------------------------------------
                       ------------------------------------------- 
  137 0000007E         ; Waiting Loop
  138 0000007E         WAIT
  139 0000007E F8DF 90F8       LDR              R9, =TIME
  140 00000082 F1B9 0901 



ARM Macro Assembler    Page 5 


                       wait1   SUBS             R9, #0x01
  141 00000086 D1FC            BNE              wait1
  142 00000088 4770            BX               LR
  143 0000008A         ;----------------------Get Environnement Entries (Update
                        Switchs & Bumpers Values)
  144 0000008A         GET_ENTRIES
  145 0000008A 683B            ldr              R3, [R7]    ;; Get Switchs Entr
                                                            ies Values
  146 0000008C F8D8 4000       ldr              R4, [R8]    ;; Get Bumper Entri
                                                            es Values
  147 00000090 E7E8            B                END_GET_ENTRIES
  148 00000092         ;----------------------BLINKING LED
  149 00000092         BLINKING_LEDS
  150 00000092 F04F 0900       MOV              R9, #0x00
  151 00000096 F8C5 9000       str              R9, [R5]    ;; Turn off LEDS wi
                                                            th 0x00  
  152 0000009A F7FF FFF0       BL               WAIT
  153 0000009E 602A            str              R2, [R5]    ;; Turn on LEDS tha
                                                            t correspond to por
                                                            tF broche 4 & 5 val
                                                            ues : 00110000 => R
                                                            2
  154 000000A0 F7FF FFED       BL               WAIT
  155 000000A4 E7EA            B                END_BLINKING_LEDS
  156 000000A6         ;----------------------CHECK SWITCHS
  157 000000A6         CHECK_SWITCHS
  158 000000A6 2B80            CMP              R3, #0x80   ;=> SWITCH 1
  159 000000A8 D002            BEQ              switch1
  160 000000AA 2B40            CMP              R3, #0x40   ;=> SWITCH 2
  161 000000AC D003            BEQ              switch2
  162 000000AE E7DA            B                END_CHECK_SWITCHS
  163 000000B0         switch1                              ; Mode de fonctionn
                                                            ement Classique
  164 000000B0 F04F 0A80       MOV              R10, #0x80
  165 000000B4 E7D7            B                END_CHECK_SWITCHS
  166 000000B6         switch2                              ; Mode de fonctionn
                                                            ement Labyrinthe
  167 000000B6 F04F 0A40       MOV              R10, #0x40
  168 000000BA E7D4            B                END_CHECK_SWITCHS
  169 000000BC         ;----------------------CHECK_BUMPERS_CLASSIQUE
  170 000000BC         CHECK_BUMPERS_CLASSIQUE
  171 000000BC 2C01            CMP              R4, #0x01
  172 000000BE D00E            BEQ              c_bumper_gauche
  173 000000C0         
  174 000000C0 2C02            CMP              R4, #0x02
  175 000000C2 D009            BEQ              c_bumper_droit
  176 000000C4         
  177 000000C4 2C03            CMP              R4, #0x03
  178 000000C6 D004            BEQ              c_bumper_not_pressed
  179 000000C8         
  180 000000C8 F7FF FFD9       BL               WAIT
  181 000000CC         
  182 000000CC 2C00            CMP              R4, #0x00
  183 000000CE D009            BEQ              c_all_bumpers
  184 000000D0         
  185 000000D0 E7D0            B                END_CHECK_BUMPERS_CLASSIQUE
  186 000000D2         c_bumper_not_pressed
  187 000000D2 F04F 0200       MOV              R2, #0x00   ; on reset les leds
                                                            



ARM Macro Assembler    Page 6 


  188 000000D6 E7CD            B                END_CHECK_BUMPERS_CLASSIQUE
  189 000000D8         c_bumper_droit
  190 000000D8 F04F 0210       MOV              R2, #0x10
  191 000000DC E7CA            B                END_CHECK_BUMPERS_CLASSIQUE
  192 000000DE         c_bumper_gauche
  193 000000DE F04F 0220       MOV              R2, #0x20
  194 000000E2 E7C7            B                END_CHECK_BUMPERS_CLASSIQUE
  195 000000E4         c_all_bumpers
  196 000000E4 F04F 0230       MOV              R2, #0x30
  197 000000E8 E7C4            B                END_CHECK_BUMPERS_CLASSIQUE
  198 000000EA         ;----------------------CHECK_BUMPERS_LABYRINTHE
  199 000000EA         CHECK_BUMPERS_LABYRINTHE
  200 000000EA 2C01            CMP              R4, #0x01
  201 000000EC D010            BEQ              l_bumper_gauche
  202 000000EE         
  203 000000EE 2C02            CMP              R4, #0x02
  204 000000F0 D00A            BEQ              l_bumper_droit
  205 000000F2         
  206 000000F2 2C03            CMP              R4, #0x03
  207 000000F4 D004            BEQ              l_bumper_not_pressed
  208 000000F6         
  209 000000F6 F7FF FFC2       BL               WAIT
  210 000000FA         
  211 000000FA 2C00            CMP              R4, #0x00
  212 000000FC D00C            BEQ              l_all_bumpers
  213 000000FE         
  214 000000FE E7BB            B                END_CHECK_BUMPERS_LABYRINTHE
  215 00000100         l_bumper_not_pressed
  216 00000100 F04F 0200       MOV              R2, #0x00   ; on reset les leds
                                                            
  217 00000104 E00C            B                GO_FRONT
  218 00000106         END_GO_FRONT
  219 00000106 E7B7            B                END_CHECK_BUMPERS_LABYRINTHE
  220 00000108         l_bumper_droit
  221 00000108 F04F 0210       MOV              R2, #0x10
  222 0000010C E017            B                GO_RIGHT
  223 0000010E         END_GO_RIGHT
  224 0000010E E7B3            B                END_CHECK_BUMPERS_LABYRINTHE
  225 00000110         l_bumper_gauche
  226 00000110 F04F 0220       MOV              R2, #0x20
  227 00000114 E00E            B                GO_LEFT
  228 00000116         END_GO_LEFT
  229 00000116 E7AF            B                END_CHECK_BUMPERS_LABYRINTHE
  230 00000118         l_all_bumpers
  231 00000118 F04F 0230       MOV              R2, #0x30
  232 0000011C E005            B                GO_BACK
  233 0000011E         END_GO_BACK
  234 0000011E E7AB            B                END_CHECK_BUMPERS_LABYRINTHE
  235 00000120         ;----------------------GO FRONT  
  236 00000120         GO_FRONT
  237 00000120 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  238 00000124 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  239 00000128 E7ED            B                END_GO_FRONT
  240 0000012A         ;----------------------GO BACK
  241 0000012A         GO_BACK
  242 0000012A F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  243 0000012E F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  244 00000132 E7F4            B                END_GO_BACK
  245 00000134         ;----------------------GO LEFT



ARM Macro Assembler    Page 7 


  246 00000134         GO_LEFT
  247 00000134 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  248 00000138 F7FF FFFE       BL               MOTEUR_GAUCHE_ARRIERE
  249 0000013C E7EB            B                END_GO_LEFT
  250 0000013E         ;----------------------GO RIGHT
  251 0000013E         GO_RIGHT
  252 0000013E F7FF FFFE       BL               MOTEUR_DROIT_ARRIERE
  253 00000142 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  254 00000146 E7E2            B                END_GO_RIGHT
  255 00000148         ;;------------------------------------------------------
                       -------------------------------------------
  256 00000148         ;;--------------------------------------- END FUNCTIONS 
                       ---------------------------------------
  257 00000148         ;;------------------------------------------------------
                       -------------------------------------------
  258 00000148         ;; retour à la suite du lien de branchement
  259 00000148 4770            BX               LR
  260 0000014A         
  261 0000014A BF00            NOP
  262 0000014C                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              400250C0 
              4000751C 
              40007510 
              40007300 
              4002451C 
              40024510 
              4002400C 
              002FFFFF 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\main.d
 -o.\main.o -I"C:\Program Files\Keil\ARM\RV31\INC" -I"C:\Program Files\Keil\ARM
\CMSIS\Include" -I"C:\Program Files\Keil\ARM\Inc\Luminary" --predefine="__EVAL 
SETA 1" --predefine="__MICROLIB SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file main.s
   Uses
      None
Comment: .text unused
BLINKING_LEDS 00000092

Symbol: BLINKING_LEDS
   Definitions
      At line 149 in file main.s
   Uses
      At line 129 in file main.s
Comment: BLINKING_LEDS used once
CHECK_BUMPERS_CLASSIQUE 000000BC

Symbol: CHECK_BUMPERS_CLASSIQUE
   Definitions
      At line 170 in file main.s
   Uses
      At line 118 in file main.s
Comment: CHECK_BUMPERS_CLASSIQUE used once
CHECK_BUMPERS_LABYRINTHE 000000EA

Symbol: CHECK_BUMPERS_LABYRINTHE
   Definitions
      At line 199 in file main.s
   Uses
      At line 122 in file main.s
Comment: CHECK_BUMPERS_LABYRINTHE used once
CHECK_SWITCHS 000000A6

Symbol: CHECK_SWITCHS
   Definitions
      At line 157 in file main.s
   Uses
      At line 111 in file main.s
Comment: CHECK_SWITCHS used once
END_BLINKING_LEDS 0000007C

Symbol: END_BLINKING_LEDS
   Definitions
      At line 130 in file main.s
   Uses
      At line 155 in file main.s
Comment: END_BLINKING_LEDS used once
END_CHECK_BUMPERS_CLASSIQUE 00000074

Symbol: END_CHECK_BUMPERS_CLASSIQUE
   Definitions
      At line 119 in file main.s
   Uses
      At line 185 in file main.s
      At line 188 in file main.s
      At line 191 in file main.s
      At line 194 in file main.s
      At line 197 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols


END_CHECK_BUMPERS_LABYRINTHE 00000078

Symbol: END_CHECK_BUMPERS_LABYRINTHE
   Definitions
      At line 123 in file main.s
   Uses
      At line 214 in file main.s
      At line 219 in file main.s
      At line 224 in file main.s
      At line 229 in file main.s
      At line 234 in file main.s

END_CHECK_SWITCHS 00000066

Symbol: END_CHECK_SWITCHS
   Definitions
      At line 112 in file main.s
   Uses
      At line 162 in file main.s
      At line 165 in file main.s
      At line 168 in file main.s

END_GET_ENTRIES 00000064

Symbol: END_GET_ENTRIES
   Definitions
      At line 109 in file main.s
   Uses
      At line 147 in file main.s
Comment: END_GET_ENTRIES used once
END_GO_BACK 0000011E

Symbol: END_GO_BACK
   Definitions
      At line 233 in file main.s
   Uses
      At line 244 in file main.s
Comment: END_GO_BACK used once
END_GO_FRONT 00000106

Symbol: END_GO_FRONT
   Definitions
      At line 218 in file main.s
   Uses
      At line 239 in file main.s
Comment: END_GO_FRONT used once
END_GO_LEFT 00000116

Symbol: END_GO_LEFT
   Definitions
      At line 228 in file main.s
   Uses
      At line 249 in file main.s
Comment: END_GO_LEFT used once
END_GO_RIGHT 0000010E

Symbol: END_GO_RIGHT
   Definitions



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

      At line 223 in file main.s
   Uses
      At line 254 in file main.s
Comment: END_GO_RIGHT used once
GET_ENTRIES 0000008A

Symbol: GET_ENTRIES
   Definitions
      At line 144 in file main.s
   Uses
      At line 108 in file main.s
Comment: GET_ENTRIES used once
GO_BACK 0000012A

Symbol: GO_BACK
   Definitions
      At line 241 in file main.s
   Uses
      At line 232 in file main.s
Comment: GO_BACK used once
GO_FRONT 00000120

Symbol: GO_FRONT
   Definitions
      At line 236 in file main.s
   Uses
      At line 217 in file main.s
Comment: GO_FRONT used once
GO_LEFT 00000134

Symbol: GO_LEFT
   Definitions
      At line 246 in file main.s
   Uses
      At line 227 in file main.s
Comment: GO_LEFT used once
GO_RIGHT 0000013E

Symbol: GO_RIGHT
   Definitions
      At line 251 in file main.s
   Uses
      At line 222 in file main.s
Comment: GO_RIGHT used once
MAIN_LOOP 00000062

Symbol: MAIN_LOOP
   Definitions
      At line 107 in file main.s
   Uses
      At line 132 in file main.s
Comment: MAIN_LOOP used once
WAIT 0000007E

Symbol: WAIT
   Definitions
      At line 138 in file main.s
   Uses
      At line 152 in file main.s



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

      At line 154 in file main.s
      At line 180 in file main.s
      At line 209 in file main.s

__main 00000000

Symbol: __main
   Definitions
      At line 59 in file main.s
   Uses
      At line 41 in file main.s
Comment: __main used once
c_all_bumpers 000000E4

Symbol: c_all_bumpers
   Definitions
      At line 195 in file main.s
   Uses
      At line 183 in file main.s
Comment: c_all_bumpers used once
c_bumper_droit 000000D8

Symbol: c_bumper_droit
   Definitions
      At line 189 in file main.s
   Uses
      At line 175 in file main.s
Comment: c_bumper_droit used once
c_bumper_gauche 000000DE

Symbol: c_bumper_gauche
   Definitions
      At line 192 in file main.s
   Uses
      At line 172 in file main.s
Comment: c_bumper_gauche used once
c_bumper_not_pressed 000000D2

Symbol: c_bumper_not_pressed
   Definitions
      At line 186 in file main.s
   Uses
      At line 178 in file main.s
Comment: c_bumper_not_pressed used once
classic_mode 00000072

Symbol: classic_mode
   Definitions
      At line 117 in file main.s
   Uses
      At line 114 in file main.s
Comment: classic_mode used once
end_choose_mode 0000007A

Symbol: end_choose_mode
   Definitions
      At line 126 in file main.s
   Uses
      At line 120 in file main.s



ARM Macro Assembler    Page 5 Alphabetic symbol ordering
Relocatable symbols

      At line 124 in file main.s

l_all_bumpers 00000118

Symbol: l_all_bumpers
   Definitions
      At line 230 in file main.s
   Uses
      At line 212 in file main.s
Comment: l_all_bumpers used once
l_bumper_droit 00000108

Symbol: l_bumper_droit
   Definitions
      At line 220 in file main.s
   Uses
      At line 204 in file main.s
Comment: l_bumper_droit used once
l_bumper_gauche 00000110

Symbol: l_bumper_gauche
   Definitions
      At line 225 in file main.s
   Uses
      At line 201 in file main.s
Comment: l_bumper_gauche used once
l_bumper_not_pressed 00000100

Symbol: l_bumper_not_pressed
   Definitions
      At line 215 in file main.s
   Uses
      At line 207 in file main.s
Comment: l_bumper_not_pressed used once
labyrinthe_mode 00000076

Symbol: labyrinthe_mode
   Definitions
      At line 121 in file main.s
   Uses
      At line 116 in file main.s
Comment: labyrinthe_mode used once
switch1 000000B0

Symbol: switch1
   Definitions
      At line 163 in file main.s
   Uses
      At line 159 in file main.s
Comment: switch1 used once
switch2 000000B6

Symbol: switch2
   Definitions
      At line 166 in file main.s
   Uses
      At line 161 in file main.s
Comment: switch2 used once
wait1 00000082



ARM Macro Assembler    Page 6 Alphabetic symbol ordering
Relocatable symbols


Symbol: wait1
   Definitions
      At line 140 in file main.s
   Uses
      At line 141 in file main.s
Comment: wait1 used once
36 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 21 in file main.s
   Uses
      At line 75 in file main.s
      At line 85 in file main.s
      At line 94 in file main.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 13 in file main.s
   Uses
      At line 73 in file main.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 17 in file main.s
   Uses
      At line 77 in file main.s
Comment: GPIO_O_DR2R used once
GPIO_O_PUR 00000510

Symbol: GPIO_O_PUR
   Definitions
      At line 24 in file main.s
   Uses
      At line 87 in file main.s
      At line 96 in file main.s

GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 27 in file main.s
   Uses
      At line 85 in file main.s
      At line 87 in file main.s
      At line 89 in file main.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 28 in file main.s
   Uses
      At line 94 in file main.s
      At line 96 in file main.s
      At line 98 in file main.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 29 in file main.s
   Uses
      At line 73 in file main.s
      At line 75 in file main.s
      At line 77 in file main.s
      At line 80 in file main.s

PINSD_6_7 000000C0

Symbol: PINSD_6_7
   Definitions
      At line 32 in file main.s
   Uses
      At line 84 in file main.s
      At line 89 in file main.s

PINSE_1_2 00000003

Symbol: PINSE_1_2
   Definitions
      At line 33 in file main.s
   Uses
      At line 93 in file main.s
      At line 98 in file main.s

PINSF_4_5 00000030

Symbol: PINSF_4_5
   Definitions
      At line 34 in file main.s
   Uses
      At line 72 in file main.s
      At line 79 in file main.s
      At line 80 in file main.s

SYSCTL_PERIPH_GPIOF 400FE108

Symbol: SYSCTL_PERIPH_GPIOF
   Definitions
      At line 9 in file main.s
   Uses
      At line 62 in file main.s
Comment: SYSCTL_PERIPH_GPIOF used once
TIME 002FFFFF

Symbol: TIME
   Definitions
      At line 37 in file main.s
   Uses
      At line 139 in file main.s
Comment: TIME used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 49 in file main.s
   Uses
      At line 242 in file main.s
      At line 252 in file main.s

MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 48 in file main.s
   Uses
      At line 237 in file main.s
      At line 247 in file main.s

MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 46 in file main.s
   Uses
      At line 103 in file main.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 55 in file main.s
   Uses
      At line 243 in file main.s
      At line 248 in file main.s

MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 54 in file main.s
   Uses
      At line 238 in file main.s
      At line 253 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols


MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE
   Definitions
      At line 56 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 52 in file main.s
   Uses
      At line 104 in file main.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 44 in file main.s
   Uses
      At line 102 in file main.s
Comment: MOTEUR_INIT used once
11 symbols
393 symbols in table
