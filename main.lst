


ARM Macro Assembler    Page 1 


    1 00000000         ; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ;------------------------------------------------
    3 00000000         ; AUTHORS - Arthur PELLEGRINI & Clément BRISSARD
    4 00000000         ;------------------------------------------------
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
    9 00000000 400FE108 
                       SYSCTL_PERIPH_GPIOF
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   10 00000000         
   11 00000000         ; Configure the corresponding pin to be an output
   12 00000000         ; All GPIO pins are inputs by default
   13 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   14 00000000         
   15 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   16 00000000         ; By default, all GPIO pins have 2-mA drive.
   17 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   18 00000000         
   19 00000000         ; Digital enable register
   20 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   21 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)
   22 00000000         
   23 00000000         ; The GPIOPUR register is the pull-up control register
   24 00000000 00000510 
                       GPIO_O_PUR
                               EQU              0x00000510
   25 00000000         
   26 00000000         ; The GPIODATA register is the data register
   27 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000
   28 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port E (APB)
                                                             base: 0x4002.4000
   29 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)



ARM Macro Assembler    Page 2 


                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   30 00000000         
   31 00000000         ; PINS Port Input
   32 00000000 000000C0 
                       PINSD_6_7
                               EQU              0xC0        ; Switchs 1 & 2 on 
                                                            Pins 6 & 7 (1100 00
                                                            00)
   33 00000000 00000003 
                       PINSE_1_2
                               EQU              0x03        ; Bumpers 1 & 2 on 
                                                            Pins 1 & 2  (0000 0
                                                            011)
   34 00000000 00000030 
                       PINSF_4_5
                               EQU              0x30        ; Leds 1 & 2 on Pin
                                                            s 4 & 5   (0011 000
                                                            0)
   35 00000000         
   36 00000000         ; Blinking Frequency
   37 00000000 002FFFFF 
                       TIME    EQU              0x002FFFFF  ; Fixed Value
   38 00000000         
   39 00000000         
   40 00000000                 ENTRY
   41 00000000                 EXPORT           __main
   42 00000000         
   43 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   44 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   45 00000000         
   46 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   47 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver l
                                                            e moteur droit
   48 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   49 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   50 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   51 00000000         
   52 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   53 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver 
                                                            le moteur gauche
   54 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'
                                                            avant
   55 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière



ARM Macro Assembler    Page 3 


   56 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   57 00000000         
   58 00000000         
   59 00000000         __main
   60 00000000         ;; Enable the Port F peripheral clock by setting bit 5 (
                       0x20 == 0b100000) (p291 datasheet de lm3s9B96.pdf)
   61 00000000         ;; (GPIO::FEDCBA)
   62 00000000 4D33            ldr              R5, = SYSCTL_PERIPH_GPIOF 
                                                            ;; RCGC2
   63 00000002 F04F 0938       mov              R9, #0x00000038 ;; Enable clock
                                                             sur GPIO F E D (00
                                                            11 1000)
   64 00000006         ;; (GPIO::FEDCBA)
   65 00000006 F8C5 9000       str              R9, [R5]
   66 0000000A         ;; "There must be a delay of 3 system clocks before any 
                       GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   67 0000000A BF00            nop                          ;; very important..
                                                            .
   68 0000000C BF00            nop
   69 0000000E BF00            nop                          ;; not necessary in
                                                             simulation or in d
                                                            ebbug step by step.
                                                            ..
   70 00000010         
   71 00000010         ;;----------------------CONF_LEDS
   72 00000010 F04F 0930       ldr              R9, = PINSF_4_5
   73 00000014 4D2F            ldr              R5, = GPIO_PORTF_BASE+GPIO_O_DI
R
   74 00000016 F8C5 9000       str              R9, [R5]
   75 0000001A 4D2F            ldr              R5, = GPIO_PORTF_BASE+GPIO_O_DE
N
   76 0000001C F8C5 9000       str              R9, [R5]
   77 00000020 4D2E            ldr              R5, = GPIO_PORTF_BASE+GPIO_O_DR
2R
   78 00000022 F8C5 9000       str              R9, [R5]
   79 00000026 F04F 0230       mov              R2, #PINSF_4_5 ; LEDS values   
                                                            
   80 0000002A 4D2D            ldr              R5, = GPIO_PORTF_BASE + (PINSF_
4_5<<2) 
                                                            ; Turn on LEDS that
                                                             correspond to port
                                                            F broches 4 & 5 val
                                                            ues   
   81 0000002C         ;;----------------------END_CONF_LEDS
   82 0000002C         
   83 0000002C         ;;----------------------CONF_SWITCHS
   84 0000002C F04F 09C0       ldr              R9, = PINSD_6_7
   85 00000030 4F2C            ldr              R7, = GPIO_PORTD_BASE+GPIO_O_DE
N
   86 00000032 F8C7 9000       str              R9, [R7]
   87 00000036 4F2C            ldr              R7, = GPIO_PORTD_BASE+GPIO_O_PU
R
   88 00000038 F8C7 9000       str              R9, [R7]
   89 0000003C 4F2B            ldr              R7, = GPIO_PORTD_BASE + (PINSD_
6_7<<2)
   90 0000003E         ;;----------------------END_CONF_SWITCHS
   91 0000003E         



ARM Macro Assembler    Page 4 


   92 0000003E         ;;----------------------CONF_BUMPERS
   93 0000003E F04F 0903       ldr              R9, = PINSE_1_2
   94 00000042 F8DF 80AC       ldr              R8, = GPIO_PORTE_BASE+GPIO_O_DE
N
   95 00000046 F8C8 9000       str              R9, [R8]
   96 0000004A F8DF 80A8       ldr              R8, = GPIO_PORTE_BASE+GPIO_O_PU
R
   97 0000004E F8C8 9000       str              R9, [R8]
   98 00000052 F8DF 80A4       ldr              R8, = GPIO_PORTE_BASE + (PINSE_
1_2<<2)
   99 00000056         ;;----------------------END_CONF_BUMPERS
  100 00000056         
  101 00000056         ;;----------------------CONF_MOTORS
  102 00000056 F7FF FFFE       BL               MOTEUR_INIT ; Setup PWM + GPIO
  103 0000005A F7FF FFFE       BL               MOTEUR_DROIT_ON ; Turn on right
                                                             motor
  104 0000005E F7FF FFFE       BL               MOTEUR_GAUCHE_ON ; Turn on left
                                                             motor
  105 00000062         ;;----------------------END_CONF_MOTORS 
  106 00000062         
  107 00000062         MAIN_LOOP
  108 00000062         
  109 00000062         ; Evalbot avance droit devant
  110 00000062 F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  111 00000066 F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  112 0000006A         
  113 0000006A         ;; Avancement pendant une période (deux WAIT)
  114 0000006A         ;BL WAIT ; BL (Branchement vers le lien WAIT); possibili
                       té de retour à la suite avec (BX LR)
  115 0000006A         ;BL WAIT
  116 0000006A         
  117 0000006A         ;; Rotation à droite de l'Evalbot pendant une demi-pér
                       iode (1 seul WAIT)
  118 0000006A         ;BL MOTEUR_DROIT_ARRIERE   ; MOTEUR_DROIT_INVERSE
  119 0000006A         
  120 0000006A E009            B                GET_ENTRIES
  121 0000006C         END_GET_ENTRIES
  122 0000006C         
  123 0000006C E016            B                CHECK_SWITCHS
  124 0000006E         END_CHECK_SWITCHS
  125 0000006E         
  126 0000006E E016            B                CHECK_BUMPERS
  127 00000070         END_CHECK_BUMPERS
  128 00000070         
  129 00000070 E00A            B                BLINKING_LEDS
  130 00000072         END_BLINKING_LEDS
  131 00000072         
  132 00000072 E7F6            b                MAIN_LOOP
  133 00000074         
  134 00000074         ;;------------------------------------------------------
                       -------------------------------------------
  135 00000074         ;;---------------------------------------   FUNCTIONS  -
                       --------------------------------------
  136 00000074         ;;------------------------------------------------------
                       ------------------------------------------- 
  137 00000074         ; Waiting Loop
  138 00000074         WAIT
  139 00000074 F8DF 9084       LDR              R9, =TIME
  140 00000078 F1B9 0901 



ARM Macro Assembler    Page 5 


                       wait1   SUBS             R9, #0x01
  141 0000007C D1FC            BNE              wait1
  142 0000007E 4770            BX               LR
  143 00000080         ;----------------------Get Environnement Entries (Update
                        Switchs & Bumpers Values)
  144 00000080         GET_ENTRIES
  145 00000080 683B            ldr              R3, [R7]    ;; Get Switchs Entr
                                                            ies Values
  146 00000082 F8D8 4000       ldr              R4, [R8]    ;; Get Bumper Entri
                                                            es Values
  147 00000086 E7F1            B                END_GET_ENTRIES
  148 00000088         ;----------------------BLINKING LED
  149 00000088         BLINKING_LEDS
  150 00000088 F04F 0900       MOV              R9, #0x00
  151 0000008C F8C5 9000       str              R9, [R5]    ;; Turn off LEDS wi
                                                            th 0x00  
  152 00000090 F7FF FFF0       BL               WAIT
  153 00000094 602A            str              R2, [R5]    ;; Turn on LEDS tha
                                                            t correspond to por
                                                            tF broche 4 & 5 val
                                                            ues : 00110000 => R
                                                            2
  154 00000096 F7FF FFED       BL               WAIT
  155 0000009A E7EA            B                END_BLINKING_LEDS
  156 0000009C         ;----------------------CHECK SWITCHS
  157 0000009C         CHECK_SWITCHS
  158 0000009C E7E7            B                END_CHECK_SWITCHS
  159 0000009E         ;----------------------CHECK BUMPERS
  160 0000009E         CHECK_BUMPERS
  161 0000009E 2C01            CMP              R4, #0x01
  162 000000A0 D00E            BEQ              bumper_gauche
  163 000000A2         
  164 000000A2 2C02            CMP              R4, #0x02
  165 000000A4 D009            BEQ              bumper_droit
  166 000000A6         
  167 000000A6 2C03            CMP              R4, #0x03
  168 000000A8 D004            BEQ              bumper_not_pressed
  169 000000AA         
  170 000000AA F7FF FFE3       BL               WAIT
  171 000000AE         
  172 000000AE 2C00            CMP              R4, #0x00
  173 000000B0 D009            BEQ              all_bumpers
  174 000000B2         
  175 000000B2 E7DD            B                END_CHECK_BUMPERS
  176 000000B4         bumper_not_pressed
  177 000000B4 F04F 0200       MOV              R2, #0x00   ; on reset les leds
                                                            
  178 000000B8 E7DA            B                END_CHECK_BUMPERS
  179 000000BA         bumper_droit
  180 000000BA F04F 0210       MOV              R2, #0x10
  181 000000BE E7D7            B                END_CHECK_BUMPERS
  182 000000C0         bumper_gauche
  183 000000C0 F04F 0220       MOV              R2, #0x20
  184 000000C4 E7D4            B                END_CHECK_BUMPERS
  185 000000C6         all_bumpers
  186 000000C6 F04F 0230       MOV              R2, #0x30
  187 000000CA E7D1            B                END_CHECK_BUMPERS
  188 000000CC         ;;------------------------------------------------------
                       -------------------------------------------



ARM Macro Assembler    Page 6 


  189 000000CC         ;;--------------------------------------- END FUNCTIONS 
                       ---------------------------------------
  190 000000CC         ;;------------------------------------------------------
                       -------------------------------------------
  191 000000CC         ;; retour à la suite du lien de branchement
  192 000000CC 4770            BX               LR
  193 000000CE         
  194 000000CE BF00            NOP
  195 000000D0                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              400250C0 
              4000751C 
              40007510 
              40007300 
              4002451C 
              40024510 
              4002400C 
              002FFFFF 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\main.d
 -o.\main.o -I"C:\Program Files\Keil\ARM\RV31\INC" -I"C:\Program Files\Keil\ARM
\CMSIS\Include" -I"C:\Program Files\Keil\ARM\Inc\Luminary" --predefine="__EVAL 
SETA 1" --predefine="__MICROLIB SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file main.s
   Uses
      None
Comment: .text unused
BLINKING_LEDS 00000088

Symbol: BLINKING_LEDS
   Definitions
      At line 149 in file main.s
   Uses
      At line 129 in file main.s
Comment: BLINKING_LEDS used once
CHECK_BUMPERS 0000009E

Symbol: CHECK_BUMPERS
   Definitions
      At line 160 in file main.s
   Uses
      At line 126 in file main.s
Comment: CHECK_BUMPERS used once
CHECK_SWITCHS 0000009C

Symbol: CHECK_SWITCHS
   Definitions
      At line 157 in file main.s
   Uses
      At line 123 in file main.s
Comment: CHECK_SWITCHS used once
END_BLINKING_LEDS 00000072

Symbol: END_BLINKING_LEDS
   Definitions
      At line 130 in file main.s
   Uses
      At line 155 in file main.s
Comment: END_BLINKING_LEDS used once
END_CHECK_BUMPERS 00000070

Symbol: END_CHECK_BUMPERS
   Definitions
      At line 127 in file main.s
   Uses
      At line 175 in file main.s
      At line 178 in file main.s
      At line 181 in file main.s
      At line 184 in file main.s
      At line 187 in file main.s

END_CHECK_SWITCHS 0000006E

Symbol: END_CHECK_SWITCHS
   Definitions
      At line 124 in file main.s
   Uses
      At line 158 in file main.s



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Comment: END_CHECK_SWITCHS used once
END_GET_ENTRIES 0000006C

Symbol: END_GET_ENTRIES
   Definitions
      At line 121 in file main.s
   Uses
      At line 147 in file main.s
Comment: END_GET_ENTRIES used once
GET_ENTRIES 00000080

Symbol: GET_ENTRIES
   Definitions
      At line 144 in file main.s
   Uses
      At line 120 in file main.s
Comment: GET_ENTRIES used once
MAIN_LOOP 00000062

Symbol: MAIN_LOOP
   Definitions
      At line 107 in file main.s
   Uses
      At line 132 in file main.s
Comment: MAIN_LOOP used once
WAIT 00000074

Symbol: WAIT
   Definitions
      At line 138 in file main.s
   Uses
      At line 152 in file main.s
      At line 154 in file main.s
      At line 170 in file main.s

__main 00000000

Symbol: __main
   Definitions
      At line 59 in file main.s
   Uses
      At line 41 in file main.s
Comment: __main used once
all_bumpers 000000C6

Symbol: all_bumpers
   Definitions
      At line 185 in file main.s
   Uses
      At line 173 in file main.s
Comment: all_bumpers used once
bumper_droit 000000BA

Symbol: bumper_droit
   Definitions
      At line 179 in file main.s
   Uses
      At line 165 in file main.s
Comment: bumper_droit used once



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

bumper_gauche 000000C0

Symbol: bumper_gauche
   Definitions
      At line 182 in file main.s
   Uses
      At line 162 in file main.s
Comment: bumper_gauche used once
bumper_not_pressed 000000B4

Symbol: bumper_not_pressed
   Definitions
      At line 176 in file main.s
   Uses
      At line 168 in file main.s
Comment: bumper_not_pressed used once
wait1 00000078

Symbol: wait1
   Definitions
      At line 140 in file main.s
   Uses
      At line 141 in file main.s
Comment: wait1 used once
17 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 21 in file main.s
   Uses
      At line 75 in file main.s
      At line 85 in file main.s
      At line 94 in file main.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 13 in file main.s
   Uses
      At line 73 in file main.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 17 in file main.s
   Uses
      At line 77 in file main.s
Comment: GPIO_O_DR2R used once
GPIO_O_PUR 00000510

Symbol: GPIO_O_PUR
   Definitions
      At line 24 in file main.s
   Uses
      At line 87 in file main.s
      At line 96 in file main.s

GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 27 in file main.s
   Uses
      At line 85 in file main.s
      At line 87 in file main.s
      At line 89 in file main.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 28 in file main.s
   Uses
      At line 94 in file main.s
      At line 96 in file main.s
      At line 98 in file main.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 29 in file main.s
   Uses
      At line 73 in file main.s
      At line 75 in file main.s
      At line 77 in file main.s
      At line 80 in file main.s

PINSD_6_7 000000C0

Symbol: PINSD_6_7
   Definitions
      At line 32 in file main.s
   Uses
      At line 84 in file main.s
      At line 89 in file main.s

PINSE_1_2 00000003

Symbol: PINSE_1_2
   Definitions
      At line 33 in file main.s
   Uses
      At line 93 in file main.s
      At line 98 in file main.s

PINSF_4_5 00000030

Symbol: PINSF_4_5
   Definitions
      At line 34 in file main.s
   Uses
      At line 72 in file main.s
      At line 79 in file main.s
      At line 80 in file main.s

SYSCTL_PERIPH_GPIOF 400FE108

Symbol: SYSCTL_PERIPH_GPIOF
   Definitions
      At line 9 in file main.s
   Uses
      At line 62 in file main.s
Comment: SYSCTL_PERIPH_GPIOF used once
TIME 002FFFFF

Symbol: TIME
   Definitions
      At line 37 in file main.s
   Uses
      At line 139 in file main.s
Comment: TIME used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 49 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_ARRIERE unused
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 48 in file main.s
   Uses
      At line 110 in file main.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 47 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 46 in file main.s
   Uses
      At line 103 in file main.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 55 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_ARRIERE unused
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 54 in file main.s
   Uses
      At line 111 in file main.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 56 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 52 in file main.s
   Uses
      At line 104 in file main.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 44 in file main.s
   Uses
      At line 102 in file main.s
Comment: MOTEUR_INIT used once
11 symbols
374 symbols in table
