


ARM Macro Assembler    Page 1 


    1 00000000         ;; RK - Evalbot (Cortex M3 de Texas Instrument)
    2 00000000         ; programme - Pilotage 2 Moteurs Evalbot par PWM tout en
                        ASM (Evalbot tourne sur lui même)
    3 00000000         
    4 00000000         
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY
    7 00000000         
    8 00000000         
    9 00000000         ; This register controls the clock gating logic in norma
                       l Run mode
   10 00000000 400FE108 
                       SYSCTL_PERIPH_GPIOF
                               EQU              0x400FE108  ; SYSCTL_RCGC2_R (p
                                                            291 datasheet de lm
                                                            3s9b92.pdf)
   11 00000000         
   12 00000000         ; The GPIODATA register is the data register
   13 00000000 40007000 
                       GPIO_PORTD_BASE
                               EQU              0x40007000  ; GPIO Port D (APB)
                                                             base: 0x4000.7000
   14 00000000 40024000 
                       GPIO_PORTE_BASE
                               EQU              0x40024000  ; GPIO Port E (APB)
                                                             base: 0x4002.4000
   15 00000000 40025000 
                       GPIO_PORTF_BASE
                               EQU              0x40025000  ; GPIO Port F (APB)
                                                             base: 0x4002.5000 
                                                            (p416 datasheet de 
                                                            lm3s9B92.pdf)
   16 00000000         
   17 00000000         ; configure the corresponding pin to be an output
   18 00000000         ; all GPIO pins are inputs by default
   19 00000000 00000400 
                       GPIO_O_DIR
                               EQU              0x00000400  ; GPIO Direction (p
                                                            417 datasheet de lm
                                                            3s9B92.pdf)
   20 00000000         
   21 00000000         ; The GPIODR2R register is the 2-mA drive control regist
                       er
   22 00000000         ; By default, all GPIO pins have 2-mA drive.
   23 00000000 00000500 
                       GPIO_O_DR2R
                               EQU              0x00000500  ; GPIO 2-mA Drive S
                                                            elect (p428 datashe
                                                            et de lm3s9B92.pdf)
                                                            
   24 00000000         
   25 00000000         ; Digital enable register
   26 00000000         ; To use the pin as a digital input or output, the corre
                       sponding GPIODEN bit must be set.
   27 00000000 0000051C 
                       GPIO_O_DEN
                               EQU              0x0000051C  ; GPIO Digital Enab
                                                            le (p437 datasheet 
                                                            de lm3s9B92.pdf)



ARM Macro Assembler    Page 2 


   28 00000000         
   29 00000000         ; The GPIOPUR register is the pull-up control register
   30 00000000 00000510 
                       GPIO_O_PUR
                               EQU              0x00000510
   31 00000000         
   32 00000000         ; PINS port input
   33 00000000 000000C0 
                       PINSD_6_7
                               EQU              0xC0        ; switch 1 & 2 sur 
                                                            broches 6 & 7 (1100
                                                             0000)
   34 00000000 00000003 
                       PINSE_1_2
                               EQU              0x03        ; bumpers 1 & 2 sur
                                                             les broches (0000 
                                                            0011)
   35 00000000         
   36 00000000         ; PINS port output
   37 00000000 00000030 
                       PINSF_4_5
                               EQU              0x30        ; led 1 & 2 sur bro
                                                            ches 4 & 5 (0011 00
                                                            00)
   38 00000000         
   39 00000000         ; blinking frequency
   40 00000000 002FFFFF 
                       DUREE   EQU              0x002FFFFF  ; Random Value
   41 00000000         
   42 00000000         
   43 00000000                 ENTRY
   44 00000000                 EXPORT           __main
   45 00000000         
   46 00000000         ;; The IMPORT command specifies that a symbol is defined
                        in a shared object at runtime.
   47 00000000                 IMPORT           MOTEUR_INIT ; initialise les mo
                                                            teurs (configure le
                                                            s pwms + GPIO)
   48 00000000         
   49 00000000                 IMPORT           MOTEUR_DROIT_ON ; activer le mo
                                                            teur droit
   50 00000000                 IMPORT           MOTEUR_DROIT_OFF ; déactiver l
                                                            e moteur droit
   51 00000000                 IMPORT           MOTEUR_DROIT_AVANT ; moteur dro
                                                            it tourne vers l'av
                                                            ant
   52 00000000                 IMPORT           MOTEUR_DROIT_ARRIERE ; moteur d
                                                            roit tourne vers l'
                                                            arrière
   53 00000000                 IMPORT           MOTEUR_DROIT_INVERSE ; inverse 
                                                            le sens de rotation
                                                             du moteur droit
   54 00000000         
   55 00000000                 IMPORT           MOTEUR_GAUCHE_ON ; activer le m
                                                            oteur gauche
   56 00000000                 IMPORT           MOTEUR_GAUCHE_OFF ; déactiver 
                                                            le moteur gauche
   57 00000000                 IMPORT           MOTEUR_GAUCHE_AVANT ; moteur ga
                                                            uche tourne vers l'



ARM Macro Assembler    Page 3 


                                                            avant
   58 00000000                 IMPORT           MOTEUR_GAUCHE_ARRIERE ; moteur 
                                                            gauche tourne vers 
                                                            l'arrière
   59 00000000                 IMPORT           MOTEUR_GAUCHE_INVERSE ; inverse
                                                             le sens de rotatio
                                                            n du moteur gauche
   60 00000000         
   61 00000000         
   62 00000000         __main
   63 00000000         ; ;; Enable the Port F peripheral clock by setting bit 5
                        (0x20 == 0b100000)  (p291 datasheet de lm3s9B96.pdf)
   64 00000000         ; ;;               (GPIO::FEDCBA)
   65 00000000 4E21            ldr              r6, = SYSCTL_PERIPH_GPIOF 
                                                            ;; RCGC2
   66 00000002 F04F 0038       mov              r0, #0x00000038 ;; Enable clock
                                                             sur GPIO F E D (00
                                                            11 1000)
   67 00000006         ; ;;                         (GPIO::FEDCBA)
   68 00000006 6030            str              r0, [r6]
   69 00000008         
   70 00000008         ; ;; "There must be a delay of 3 system clocks before an
                       y GPIO reg. access  (p413 datasheet de lm3s9B92.pdf)
   71 00000008 BF00            nop                          ;; tres tres import
                                                            ant....
   72 0000000A BF00            nop
   73 0000000C BF00            nop                          ;; pas necessaire e
                                                            n simu ou en debbug
                                                             step by step...
   74 0000000E         
   75 0000000E         ;-----------------------CONFIGURATION LED
   76 0000000E F04F 0030       ldr              r0, = PINSF_4_5
   77 00000012 4E1E            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DI
R
   78 00000014 6030            str              r0, [r6]
   79 00000016         
   80 00000016 4E1E            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DE
N
   81 00000018 6030            str              r0, [r6]
   82 0000001A         
   83 0000001A 4E1E            ldr              r6, = GPIO_PORTF_BASE+GPIO_O_DR
2R
   84 0000001C 6030            str              r0, [r6]
   85 0000001E         
   86 0000001E         ; allumer les leds
   87 0000001E F04F 0230       mov              r2, #PINSF_4_5
   88 00000022         
   89 00000022         ;; Allume portF broches 4 et 5        
   90 00000022 4E1D            ldr              r6, = GPIO_PORTF_BASE + (PINSF_
4_5<<2)
   91 00000024         
   92 00000024         ;; pour eteindre LED 
   93 00000024 F04F 0100       mov              r1, #0x000
   94 00000028         
   95 00000028         ;-----------------------FIN CONFIGURATION LED 
   96 00000028         
   97 00000028         ;-----------------------CONFIGURATION SWITCH
   98 00000028 F04F 00C0       ldr              r0, = PINSD_6_7
   99 0000002C         



ARM Macro Assembler    Page 4 


  100 0000002C 4F1B            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_DE
N
  101 0000002E 6038            str              r0, [r7]
  102 00000030         
  103 00000030 4F1B            ldr              r7, = GPIO_PORTD_BASE+GPIO_O_PU
R
  104 00000032 6038            str              r0, [r7]
  105 00000034         
  106 00000034 4F1B            ldr              r7, = GPIO_PORTD_BASE + (PINSD_
6_7<<2)
  107 00000036         ;-----------------------FIN CONFIGURATION SWITCH
  108 00000036         
  109 00000036         ;;----------------------CONFIGURATION BUMPER
  110 00000036 F04F 0003       ldr              r0, = PINSE_1_2
  111 0000003A         
  112 0000003A F8DF 806C       ldr              r8, = GPIO_PORTE_BASE+GPIO_O_DE
N
  113 0000003E F8C8 0000       str              r0, [r8]
  114 00000042         
  115 00000042 F8DF 8068       ldr              r8, = GPIO_PORTE_BASE+GPIO_O_PU
R
  116 00000046 F8C8 0000       str              r0, [r8]
  117 0000004A F8DF 8064       ldr              r8, = GPIO_PORTE_BASE + (PINSE_
1_2<<2)
  118 0000004E         ;;----------------------FIN CONFIGURATION BUMPER
  119 0000004E         
  120 0000004E         
  121 0000004E         
  122 0000004E         
  123 0000004E         ;; BL Branchement vers un lien (sous programme)
  124 0000004E         
  125 0000004E         ; Configure les PWM + GPIO
  126 0000004E F7FF FFFE       BL               MOTEUR_INIT
  127 00000052         
  128 00000052         ; Activer les deux moteurs droit et gauche
  129 00000052 F7FF FFFE       BL               MOTEUR_DROIT_ON
  130 00000056 F7FF FFFE       BL               MOTEUR_GAUCHE_ON
  131 0000005A         
  132 0000005A         
  133 0000005A         loop
  134 0000005A         ; Boucle de pilotage des 2 Moteurs (Evalbot tourne sur l
                       ui même)
  135 0000005A         ; Evalbot avance droit devant
  136 0000005A F7FF FFFE       BL               MOTEUR_DROIT_AVANT
  137 0000005E F7FF FFFE       BL               MOTEUR_GAUCHE_AVANT
  138 00000062         
  139 00000062         ; Avancement pendant une période (deux WAIT)
  140 00000062 F000 F80C       BL               WAIT        ; BL (Branchement v
                                                            ers le lien WAIT); 
                                                            possibilité de ret
                                                            our à la suite ave
                                                            c (BX LR)
  141 00000066 F000 F80A       BL               WAIT
  142 0000006A         
  143 0000006A         ; Rotation à droite de l'Evalbot pendant une demi-péri
                       ode (1 seul WAIT)
  144 0000006A         ;BL MOTEUR_DROIT_ARRIERE   ; MOTEUR_DROIT_INVERSE
  145 0000006A         ;BL WAIT
  146 0000006A         



ARM Macro Assembler    Page 5 


  147 0000006A 683B            ldr              r3, [r7]    ;; on récupère le
                                                            s entrées des swit
                                                            chs
  148 0000006C F8D8 4000       ldr              r4, [r8]    ;; on récupère le
                                                            s entrées des bump
                                                            ers
  149 00000070 6031            str              r1, [r6]    ;; Eteint LED car r
                                                            2 = 0x00       
  150 00000072 F000 F804       BL               WAIT
  151 00000076 6032            str              r2, [r6]    ;; Allume portF bro
                                                            che 4 & 5 : 0011000
                                                            0 (contenu de r3)
  152 00000078 F000 F801       BL               WAIT
  153 0000007C         
  154 0000007C E7ED            b                loop
  155 0000007E         
  156 0000007E         ;; Boucle d'attante
  157 0000007E 480D    WAIT    ldr              r0, =0xAFFFFF
  158 00000080 3801    wait1   subs             r0, #1
  159 00000082 D1FD            bne              wait1
  160 00000084         
  161 00000084         ;; retour à la suite du lien de branchement
  162 00000084 4770            BX               LR
  163 00000086         
  164 00000086 BF00            NOP
  165 00000088                 END
              400FE108 
              40025400 
              4002551C 
              40025500 
              400250C0 
              4000751C 
              40007510 
              40007300 
              4002451C 
              40024510 
              4002400C 
              00AFFFFF 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\main.d
 -o.\main.o -I"C:\Program Files\Keil\ARM\RV31\INC" -I"C:\Program Files\Keil\ARM
\CMSIS\Include" -I"C:\Program Files\Keil\ARM\Inc\Luminary" --predefine="__EVAL 
SETA 1" --predefine="__MICROLIB SETA 1" --list=.\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file main.s
   Uses
      None
Comment: .text unused
WAIT 0000007E

Symbol: WAIT
   Definitions
      At line 157 in file main.s
   Uses
      At line 140 in file main.s
      At line 141 in file main.s
      At line 150 in file main.s
      At line 152 in file main.s

__main 00000000

Symbol: __main
   Definitions
      At line 62 in file main.s
   Uses
      At line 44 in file main.s
Comment: __main used once
loop 0000005A

Symbol: loop
   Definitions
      At line 133 in file main.s
   Uses
      At line 154 in file main.s
Comment: loop used once
wait1 00000080

Symbol: wait1
   Definitions
      At line 158 in file main.s
   Uses
      At line 159 in file main.s
Comment: wait1 used once
5 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

DUREE 002FFFFF

Symbol: DUREE
   Definitions
      At line 40 in file main.s
   Uses
      None
Comment: DUREE unused
GPIO_O_DEN 0000051C

Symbol: GPIO_O_DEN
   Definitions
      At line 27 in file main.s
   Uses
      At line 80 in file main.s
      At line 100 in file main.s
      At line 112 in file main.s

GPIO_O_DIR 00000400

Symbol: GPIO_O_DIR
   Definitions
      At line 19 in file main.s
   Uses
      At line 77 in file main.s
Comment: GPIO_O_DIR used once
GPIO_O_DR2R 00000500

Symbol: GPIO_O_DR2R
   Definitions
      At line 23 in file main.s
   Uses
      At line 83 in file main.s
Comment: GPIO_O_DR2R used once
GPIO_O_PUR 00000510

Symbol: GPIO_O_PUR
   Definitions
      At line 30 in file main.s
   Uses
      At line 103 in file main.s
      At line 115 in file main.s

GPIO_PORTD_BASE 40007000

Symbol: GPIO_PORTD_BASE
   Definitions
      At line 13 in file main.s
   Uses
      At line 100 in file main.s
      At line 103 in file main.s
      At line 106 in file main.s

GPIO_PORTE_BASE 40024000

Symbol: GPIO_PORTE_BASE
   Definitions
      At line 14 in file main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

      At line 112 in file main.s
      At line 115 in file main.s
      At line 117 in file main.s

GPIO_PORTF_BASE 40025000

Symbol: GPIO_PORTF_BASE
   Definitions
      At line 15 in file main.s
   Uses
      At line 77 in file main.s
      At line 80 in file main.s
      At line 83 in file main.s
      At line 90 in file main.s

PINSD_6_7 000000C0

Symbol: PINSD_6_7
   Definitions
      At line 33 in file main.s
   Uses
      At line 98 in file main.s
      At line 106 in file main.s

PINSE_1_2 00000003

Symbol: PINSE_1_2
   Definitions
      At line 34 in file main.s
   Uses
      At line 110 in file main.s
      At line 117 in file main.s

PINSF_4_5 00000030

Symbol: PINSF_4_5
   Definitions
      At line 37 in file main.s
   Uses
      At line 76 in file main.s
      At line 87 in file main.s
      At line 90 in file main.s

SYSCTL_PERIPH_GPIOF 400FE108

Symbol: SYSCTL_PERIPH_GPIOF
   Definitions
      At line 10 in file main.s
   Uses
      At line 65 in file main.s
Comment: SYSCTL_PERIPH_GPIOF used once
12 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

MOTEUR_DROIT_ARRIERE 00000000

Symbol: MOTEUR_DROIT_ARRIERE
   Definitions
      At line 52 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_ARRIERE unused
MOTEUR_DROIT_AVANT 00000000

Symbol: MOTEUR_DROIT_AVANT
   Definitions
      At line 51 in file main.s
   Uses
      At line 136 in file main.s
Comment: MOTEUR_DROIT_AVANT used once
MOTEUR_DROIT_INVERSE 00000000

Symbol: MOTEUR_DROIT_INVERSE
   Definitions
      At line 53 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_INVERSE unused
MOTEUR_DROIT_OFF 00000000

Symbol: MOTEUR_DROIT_OFF
   Definitions
      At line 50 in file main.s
   Uses
      None
Comment: MOTEUR_DROIT_OFF unused
MOTEUR_DROIT_ON 00000000

Symbol: MOTEUR_DROIT_ON
   Definitions
      At line 49 in file main.s
   Uses
      At line 129 in file main.s
Comment: MOTEUR_DROIT_ON used once
MOTEUR_GAUCHE_ARRIERE 00000000

Symbol: MOTEUR_GAUCHE_ARRIERE
   Definitions
      At line 58 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_ARRIERE unused
MOTEUR_GAUCHE_AVANT 00000000

Symbol: MOTEUR_GAUCHE_AVANT
   Definitions
      At line 57 in file main.s
   Uses
      At line 137 in file main.s
Comment: MOTEUR_GAUCHE_AVANT used once
MOTEUR_GAUCHE_INVERSE 00000000

Symbol: MOTEUR_GAUCHE_INVERSE



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

   Definitions
      At line 59 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_INVERSE unused
MOTEUR_GAUCHE_OFF 00000000

Symbol: MOTEUR_GAUCHE_OFF
   Definitions
      At line 56 in file main.s
   Uses
      None
Comment: MOTEUR_GAUCHE_OFF unused
MOTEUR_GAUCHE_ON 00000000

Symbol: MOTEUR_GAUCHE_ON
   Definitions
      At line 55 in file main.s
   Uses
      At line 130 in file main.s
Comment: MOTEUR_GAUCHE_ON used once
MOTEUR_INIT 00000000

Symbol: MOTEUR_INIT
   Definitions
      At line 47 in file main.s
   Uses
      At line 126 in file main.s
Comment: MOTEUR_INIT used once
11 symbols
362 symbols in table
